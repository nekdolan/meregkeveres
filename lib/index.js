// Generated by CoffeeScript 1.10.0
(function() {
  var $cost, $kn, $main, $secondary, addValueProvider, calculateCost, calculateDifficulty, costMultipliers, difficultyModifiers, getFormData, getHtmlDifficultyModifier, getHtmlSpecialModifier, getNumber, init, renderAllSpecialModifiers, renderCost, renderDifficulty, renderModifiers, renderSpecialModifier, specialDifficultyModifiers, t;

  t = parser.t, addValueProvider = parser.addValueProvider, difficultyModifiers = parser.difficultyModifiers, specialDifficultyModifiers = parser.specialDifficultyModifiers, costMultipliers = parser.costMultipliers, calculateDifficulty = parser.calculateDifficulty, calculateCost = parser.calculateCost;

  $main = $('#main_container_field');

  $secondary = $('#secondary_container_field');

  $kn = $('#kn_container_field');

  $cost = $('#cost_container_field');

  getNumber = function(label) {
    return prompt("Írj be egy számot (" + label + ")!", 0);
  };

  addValueProvider('getNumber', getNumber);

  parser.init();

  getHtmlDifficultyModifier = function(type, names) {
    var html;
    html = "<p><label for='id_" + type + "'>" + (t(type)) + ":</label> ";
    html += "<select id='id_" + type + "' name='" + type + "'>";
    html += _(names).keys().reduce((function(sum, key) {
      return sum + "\n<option value='" + key + "'>" + (t(key)) + "</option>";
    }), '');
    return html += "</select></p>";
  };

  renderModifiers = function() {
    var content;
    content = _(difficultyModifiers).reduce((function(res, modifiers, name) {
      return res + "\n" + (getHtmlDifficultyModifier(name, modifiers));
    }), '');
    return $main.html(content);
  };

  getHtmlSpecialModifier = function(name, effect, selectedValue) {
    return "<input id='id_" + name + "_" + effect + "' type='radio' name='" + name + "' value='" + effect + "' " + (effect === selectedValue ? "checked='checked'" : "") + " /> <label for='id_" + name + "_" + effect + "'>" + (t(effect)) + "</label> ";
  };

  renderSpecialModifier = function(name) {
    var effects, poisonType, selectedValue;
    poisonType = getFormData("tipus_" + name);
    effects = _(costMultipliers[poisonType].hatas).keys();
    selectedValue = getFormData(name);
    if (effects.indexOf(selectedValue) === -1) {
      selectedValue = effects.first();
    }
    return effects.reduce((function(res, effectName) {
      return res + "\n" + (getHtmlSpecialModifier(name, effectName, selectedValue));
    }), '');
  };

  renderAllSpecialModifiers = function() {
    var content;
    content = _(specialDifficultyModifiers).keys().reduce((function(res, type) {
      return res + "<div id='" + type + "'>" + (t(type)) + "<br />" + (renderSpecialModifier(type)) + "</div>\n";
    }), '');
    return $secondary.html(content);
  };

  renderCost = function() {
    var cost;
    cost = calculateCost(getFormData());
    return $cost.html("<p>" + (t('ar')) + ": " + cost + "</p>");
  };

  renderDifficulty = function(item) {
    var difficulty, value;
    difficulty = calculateDifficulty(getFormData(), $(item).prop('name'));
    value = difficulty ? difficulty : 'Hiba!';
    return $kn.html("<p>" + (t('kn')) + ": " + value + "</p>");
  };

  getFormData = function(attr) {
    var data, ref;
    data = $('form').serializeArray();
    if (!attr) {
      return data;
    }
    return (ref = _(data).find({
      name: attr
    })) != null ? ref.value : void 0;
  };

  init = function() {
    renderModifiers();
    renderAllSpecialModifiers();
    renderDifficulty();
    renderCost();
    $('form').on('change', 'select[name^="tipus"]', function() {
      return renderAllSpecialModifiers();
    });
    return $('form').on('change', 'select, input', function(event) {
      renderDifficulty(event.target);
      return renderCost();
    });
  };

  init();

}).call(this);
